{"ast":null,"code":"var _jsxFileName = \"/app/src/components/CartModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { calculateTotals } from '../features/cart/cartSlice';\n// 自分のプロジェクトのパスに置き換えてください\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartModal = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    cartItems\n  } = useSelector(state => state.cart);\n  const {\n    isOpen,\n    isAddOpen\n  } = useSelector(state => state.modal);\n  useEffect(() => {\n    dispatch(calculateTotals());\n  }, [cartItems, dispatch]);\n  {\n    cartItems.map(item => {\n      // idがある場合に限り、CartItemをレンダリング\n      const cartItemProps = {\n        id: item.id,\n        img: item.img,\n        title: item.title,\n        price: item.price,\n        amount: item.amount || 0 // amountがundefinedの場合に0を代入\n      };\n      return /*#__PURE__*/_jsxDEV(CartItem, {\n        ...cartItemProps\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }, this);\n    });\n  }\n};\n_s(CartModal, \"tle23yiGyeYSwtZaYWiNAeU46qg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CartModal;\nexport default CartModal;\nvar _c;\n$RefreshReg$(_c, \"CartModal\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","calculateTotals","jsxDEV","_jsxDEV","CartModal","_s","dispatch","cartItems","state","cart","isOpen","isAddOpen","modal","map","item","cartItemProps","id","img","title","price","amount","CartItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/CartModal.tsx"],"sourcesContent":["import { clearCart } from '../features/cart/cartSlice'\nimport { closeModal } from '../features/modal/modalSlice'\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { calculateTotals } from '../features/cart/cartSlice';\nimport { AppDispatch, RootState } from '../store'; // 自分のプロジェクトのパスに置き換えてください\nimport AddModal from '../components/AddModal';\nimport Modal from '../components/Modal';\nimport CartContainer from './CartContainer';\nimport { CartItemType } from './CartItem';\n\n\n\nconst CartModal: React.FC = () => {\n  const dispatch = useDispatch()\n  const { cartItems } = useSelector((state: RootState) => state.cart);\n  const { isOpen, isAddOpen } = useSelector((state: RootState) => state.modal);\n\n\n  useEffect(() => {\n    dispatch(calculateTotals());\n  }, [cartItems, dispatch]);\n\n  {cartItems.map((item) => {\n    // idがある場合に限り、CartItemをレンダリング\n    const cartItemProps: CartItemType = {\n      id: item.id,\n      img: item.img,\n      title: item.title,\n      price: item.price,\n      amount: item.amount || 0, // amountがundefinedの場合に0を代入\n    };\n    return <CartItem key={item.id} {...cartItemProps} />;\n  })}\n};\n\nexport default CartModal\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,4BAA4B;AACT;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAU,CAAC,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnE,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGZ,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACI,KAAK,CAAC;EAG5Ed,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACM,SAAS,EAAED,QAAQ,CAAC,CAAC;EAEzB;IAACC,SAAS,CAACM,GAAG,CAAEC,IAAI,IAAK;MACvB;MACA,MAAMC,aAA2B,GAAG;QAClCC,EAAE,EAAEF,IAAI,CAACE,EAAE;QACXC,GAAG,EAAEH,IAAI,CAACG,GAAG;QACbC,KAAK,EAAEJ,IAAI,CAACI,KAAK;QACjBC,KAAK,EAAEL,IAAI,CAACK,KAAK;QACjBC,MAAM,EAAEN,IAAI,CAACM,MAAM,IAAI,CAAC,CAAE;MAC5B,CAAC;MACD,oBAAOjB,OAAA,CAACkB,QAAQ;QAAA,GAAmBN;MAAa,GAA1BD,IAAI,CAACE,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC;IACtD,CAAC,CAAC;EAAA;AACJ,CAAC;AAACpB,EAAA,CArBID,SAAmB;EAAA,QACNJ,WAAW,EACND,WAAW,EACHA,WAAW;AAAA;AAAA2B,EAAA,GAHrCtB,SAAmB;AAuBzB,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}