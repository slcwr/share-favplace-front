{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './features/cart/cartSlice';\nimport modalReducer from './features/modal/modalSlice';\nimport { save, load } from 'redux-localstorage-simple';\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n    modal: modalReducer\n  },\n  preloadedState: load(),\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(save())\n});","map":{"version":3,"names":["configureStore","cartReducer","modalReducer","save","load","store","reducer","cart","modal","preloadedState","middleware","getDefaultMiddleware","concat"],"sources":["/app/src/store.tsx"],"sourcesContent":["\nimport { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './features/cart/cartSlice';\nimport modalReducer from './features/modal/modalSlice';\nimport { save, load } from 'redux-localstorage-simple';\nimport { persistReducer, persistStore } from 'redux-persist'\n\n\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n    modal: modalReducer,\n  },\n  preloadedState: load(),\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(save()),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,SAASC,IAAI,EAAEC,IAAI,QAAQ,2BAA2B;AAItD,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,IAAI,EAAEN,WAAW;IACjBO,KAAK,EAAEN;EACT,CAAC;EACDO,cAAc,EAAEL,IAAI,CAAC,CAAC;EACtBM,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACT,IAAI,CAAC,CAAC;AAC5E,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}