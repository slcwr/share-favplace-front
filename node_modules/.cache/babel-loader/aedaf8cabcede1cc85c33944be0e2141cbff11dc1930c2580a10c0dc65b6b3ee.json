{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isOpen: false,\n  isAddOpen: false\n};\nconst modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    openModal(state) {\n      state.isOpen = true;\n    },\n    addOpenModal(state) {\n      state.isAddOpen = true;\n    },\n    closeModal(state) {\n      state.isOpen = false;\n      state.isAddOpen = false;\n    }\n  }\n});\nexport const {\n  openModal,\n  addOpenModal,\n  closeModal\n} = modalSlice.actions;\nexport default modalSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isOpen","isAddOpen","modalSlice","name","reducers","openModal","state","addOpenModal","closeModal","actions","reducer"],"sources":["/Users/a.y/work/share-favplace-front/src/features/modal/modalSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface ModalState {\n  isOpen: boolean;\n  isAddOpen: boolean;\n}\n\nconst initialState: ModalState = {\n  isOpen: false,\n  isAddOpen: false,\n};\n\nconst modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    openModal(state) {\n      state.isOpen = true;\n    },\n    addOpenModal(state) {\n      state.isAddOpen = true;\n    },\n    closeModal(state) {\n      state.isOpen = false;\n      state.isAddOpen = false;\n    },\n  },\n});\n\nexport const { openModal, addOpenModal, closeModal } = modalSlice.actions;\nexport default modalSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAwB,GAAG;EAC/BC,MAAM,EAAE,KAAK;EACbC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,MAAM,GAAG,IAAI;IACrB,CAAC;IACDO,YAAYA,CAACD,KAAK,EAAE;MAClBA,KAAK,CAACL,SAAS,GAAG,IAAI;IACxB,CAAC;IACDO,UAAUA,CAACF,KAAK,EAAE;MAChBA,KAAK,CAACN,MAAM,GAAG,KAAK;MACpBM,KAAK,CAACL,SAAS,GAAG,KAAK;IACzB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,SAAS;EAAEE,YAAY;EAAEC;AAAW,CAAC,GAAGN,UAAU,CAACO,OAAO;AACzE,eAAeP,UAAU,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}