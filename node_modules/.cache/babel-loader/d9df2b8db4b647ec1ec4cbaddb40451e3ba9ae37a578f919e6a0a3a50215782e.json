{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Modal.tsx\",\n  _s = $RefreshSig$();\n// import { clearCart } from '../features/cart/cartSlice'\n// import { closeModal } from '../features/modal/modalSlice'\n// import { useDispatch } from 'react-redux'\n\n// const Modal = () => {\n//   const dispatch = useDispatch()\n//   return (\n//     <aside className=\"modal-container\">\n//         <div className=\"modal\">\n//             <h4>買い物かごを全て空にしますか？</h4>\n//             <div className=\"btn-container\">\n//                 <button className=\"btn confirm-btn\" onClick={() => {\n//                     dispatch(clearCart());\n//                     dispatch(closeModal())\n//                     }}>OK</button>\n//                 <button className=\"btn clear-btn\" onClick={() => dispatch(closeModal())}>やめとく</button>\n//             </div>\n//         </div>\n//     </aside>\n//   )\n// }\n\n//export default Modal\n\nimport React from 'react';\nimport TextBox from './TextBox';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addItem } from '../features/cart/cartSlice';\nimport { closeModal } from '../features/modal/modalSlice';\n\n// バリデーションスキーマの型を定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  id: yup.number(),\n  title: yup.string().required('必須です'),\n  price: yup.number().required('必須です'),\n  // .matches(/[1-9]|[1-9][0-9]{1,4}/, '数字で入力してください'),\n  img: yup.string().required('必須です'),\n  //.min(8, '8文字以上記入してください'),\n  //.matches(/(https?:\\/\\/[\\-_\\.\\!\\~\\*\\'\\(\\)a-zA-Z0-9\\;\\/\\?\\:\\@\\&\\=\\+\\$\\,\\%\\#]+)/i, '正しい書式で記入してください'),\n  amount: yup.number()\n}).required();\nconst Modal = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => {\n    dispatch(addItem(data));\n    dispatch(closeModal());\n  };\n  console.log(\"bbb\");\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"modal-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal add\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextBox, {\n        register: register,\n        errors: errors,\n        values: [{\n          id: 1,\n          english: 'title',\n          japanese: 'タイトル'\n        }, {\n          id: 2,\n          english: 'price',\n          japanese: '価格'\n        }, {\n          id: 3,\n          english: 'img',\n          japanese: '画像パス'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        children: \"\\u4F5C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-btn\",\n        type: \"button\",\n        onClick: () => dispatch(closeModal()),\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"h803nG4XeTddS25Sw5zpNT9ipSU=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","TextBox","useForm","yupResolver","yup","useDispatch","addItem","closeModal","jsxDEV","_jsxDEV","schema","object","id","number","title","string","required","price","img","amount","Modal","_s","dispatch","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","className","children","values","english","japanese","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/app/src/components/Modal.tsx"],"sourcesContent":["// import { clearCart } from '../features/cart/cartSlice'\n// import { closeModal } from '../features/modal/modalSlice'\n// import { useDispatch } from 'react-redux'\n\n// const Modal = () => {\n//   const dispatch = useDispatch()\n//   return (\n//     <aside className=\"modal-container\">\n//         <div className=\"modal\">\n//             <h4>買い物かごを全て空にしますか？</h4>\n//             <div className=\"btn-container\">\n//                 <button className=\"btn confirm-btn\" onClick={() => {\n//                     dispatch(clearCart());\n//                     dispatch(closeModal())\n//                     }}>OK</button>\n//                 <button className=\"btn clear-btn\" onClick={() => dispatch(closeModal())}>やめとく</button>\n//             </div>\n//         </div>\n//     </aside>\n//   )\n// }\n\n//export default Modal\n\nimport React from 'react';\nimport TextBox from './TextBox';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addItem } from '../features/cart/cartSlice';\nimport { closeModal } from '../features/modal/modalSlice';\n\n// バリデーションスキーマの型を定義\ninterface FormData {\n    id?: number;\n    title: string;\n    price: number;\n    img: string;\n    amount?: number;\n}\n\nconst schema = yup.object({\n   id: yup.number(),\n  title: yup.string().required('必須です'),\n  price: yup\n    .number()\n    .required('必須です'),\n    // .matches(/[1-9]|[1-9][0-9]{1,4}/, '数字で入力してください'),\n  img: yup\n    .string()\n    .required('必須です'),\n    //.min(8, '8文字以上記入してください'),\n    //.matches(/(https?:\\/\\/[\\-_\\.\\!\\~\\*\\'\\(\\)a-zA-Z0-9\\;\\/\\?\\:\\@\\&\\=\\+\\$\\,\\%\\#]+)/i, '正しい書式で記入してください'),\n   amount: yup.number()\n}).required();\n\nconst Modal: React.FC = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, formState: { errors } } = useForm<FormData>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    dispatch(addItem(data));\n    dispatch(closeModal());\n  };\n\n  console.log(\"bbb\")\n\n  return (\n    <aside className=\"modal-container\">\n      <form className=\"modal add\" onSubmit={handleSubmit(onSubmit)}>\n        <TextBox\n          register={register}\n          errors={errors}\n          values={[\n            { id: 1, english: 'title', japanese: 'タイトル' },\n            { id: 2, english: 'price', japanese: '価格' },\n            { id: 3, english: 'img', japanese: '画像パス' },\n          ]}\n        />\n        <button className=\"add-btn\">作成</button>\n        <button className=\"cancel-btn\" type=\"button\" onClick={() => dispatch(closeModal())}>閉じる</button>\n      </form>\n    </aside>\n  );\n};\n\nexport default Modal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}