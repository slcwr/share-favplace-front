{"ast":null,"code":"var _jsxFileName = \"/app/src/components/TextBox.tsx\";\n// TextBox.tsx\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextBox = ({\n  register,\n  errors,\n  values\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textbox-container\",\n    children: values.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textbox-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.japanese\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(field.english)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), errors[field.english] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors[field.english].message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = TextBox;\nexport default TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TextBox","register","errors","values","className","children","map","field","japanese","fileName","_jsxFileName","lineNumber","columnNumber","type","english","message","id","_c","$RefreshReg$"],"sources":["/app/src/components/TextBox.tsx"],"sourcesContent":["// TextBox.tsx\n\nimport React from 'react';\n\ninterface TextBoxProps {\n  register: any; // react-hook-form の register メソッドの型\n  errors: any; // react-hook-form の errors オブジェクトの型\n  values: { id: number; english: string; japanese: string }[]; // 入力フィールドの情報の配列\n}\n\nconst TextBox: React.FC<TextBoxProps> = ({ register, errors, values }) => {\n  return (\n    <div className=\"textbox-container\">\n      {values.map((field) => (\n        <div key={field.id} className=\"textbox-field\">\n          <label>{field.japanese}</label>\n          <input type=\"text\" {...register(field.english)} />\n          {errors[field.english] && <p className=\"error-message\">{errors[field.english].message}</p>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TextBox;\n\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,OAA+B,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EACxE,oBACEJ,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BF,MAAM,CAACG,GAAG,CAAEC,KAAK,iBAChBR,OAAA;MAAoBK,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC3CN,OAAA;QAAAM,QAAA,EAAQE,KAAK,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/Bb,OAAA;QAAOc,IAAI,EAAC,MAAM;QAAA,GAAKZ,QAAQ,CAACM,KAAK,CAACO,OAAO;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACjDV,MAAM,CAACK,KAAK,CAACO,OAAO,CAAC,iBAAIf,OAAA;QAAGK,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEH,MAAM,CAACK,KAAK,CAACO,OAAO,CAAC,CAACC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHlFL,KAAK,CAACS,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GAZIjB,OAA+B;AAcrC,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}